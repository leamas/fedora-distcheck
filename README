dist-check README

Here are scripts which together will run fedora-review  and rpmlint on all
packages.  It takes a long, long time but seems to work somehow.

The basic idea is that we need to
- List all packages (done from the webpages).
- Find out the srpm for each package and lump package(s) and srpm together
- Download the packages when it's time for review, in parallel with
  review work.
- Discard all downloaded packages when the review goes well.
- Run rpmlint on the packages.
- Use the generated rpmlint.xml and report.xml to build reports.

## Running fedora-review.
The first script is dist-check-setup. It will create a directory for each
source package. In the directory are references to all package built from the
source. This is not big (~100 MB) and can be reused.

Second script is dist-check-run. It will download packages and run
fedora-review on them. It wants a list of directories created by
dist-check-setup on stdin.

The way I use it is to create a subdir under dist-check and run the scripts
there:
    $ cd dist-check
    $ mkdir  work
    $ cd work
    $ ../dist-check-setup # wait for hours
    $ ../dist-check-run $( ls ) |& tee run.log  # wait for days...

You probably want to use "export REVIEW_LOGLEVEL=warning" to decrease the
noise. See the run-tests file in examples. This produces the file report.xml
in the *.results directories.


## Running rpmlint

The script dist-check-rpmlint runs rpmlint on the directories created in
setp above, creating rpmlint.xml

## Creatnig reports:

Reports are created from rpmlint.xml and report.xml files. To basic tools
to create reports are
- analyze, which expects a stream of xml data. It can produce several types
  of reports including overall stats (default) and a tree with issues by
  package, package by issues and package by owner.
- dist-check-merge-analyses, which merges multiple inpot xml streams to one.
- *.xsl files used to filter the input.
- report-tree-add-owners, which uses owner links created by
  dist-check-create-owners. The tree mst be there, created by analyze mktree.

There's an example how to use this in examples/run-all

## Post things:

dist-check-run creates a pkg.results dir for each run with review template
and logfile.

If you want to re-run a directory after patching f-r there is scripts to
download rpms and run f-r (download-dir + run-dir)

Oneliners:

All timing info in a logfile, sorted:
    $ grep ted: pkg.results/fedora-review.log | sort -n -t : -k 3 -r

